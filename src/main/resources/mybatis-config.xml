<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

      <!-- 3.配置数据源 ，使用的alibba的数据库-->
     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
    	<property name="url" value="${jdbc.url}"/>
    	<property name="username" value="${jdbc.username}"/>
    	<property name="password" value="${jdbc.password}"/>
    	<!-- 最大连接数量 -->
 		<property name="maxActive" value="${jdbc.maxActive}" />
		 <!-- 最小空闲连接 -->
		 <property name="minIdle" value="${jdbc.minIdle}" />
 		<!-- 最大空闲连接 -->
 		<property name="maxIdle" value="${jdbc.maxIdle}" />
		 <!-- 初始化连接数量 -->
		 <property name="initialSize" value="${jdbc.initialSize}" />
		 <!-- 连接被泄露时是否打印 -->
		 <property name="logAbandoned" value="${jdbc.logAbandoned}" />
		 <!-- 是否自动回收超时连接 -->
		 <property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		 <!-- 超时等待时间(以秒为单位) -->
		 <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
    	
		
    </bean>
    

     
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:cn/mappers/**/*.xml"></property>  
    </bean>   
    
    
     <!-- DAO接口所在包名，Spring会自动查找其下的类 ,自动扫描了所有的XxxxMapper.xml对应的mapper接口文件,只要Mapper接口类和Mapper映射文件对应起来就可以了-->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="cn.vmsservice.dao"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>
    
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
<!-- 配置事务管理器 -->
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 

    <!--======= 事务配置 End =================== -->
    <!-- 配置基于注解的声明式事务 -->
    <!-- enables scanning for @Transactional annotations -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    
</beans>
